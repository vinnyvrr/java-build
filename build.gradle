group = 'java.sample'
version = '1.0'

apply plugin: 'war'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
    }
}

import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    dockerJava {
        resolutionStrategy {
            force 'de.gesellix:unix-socket-factory:2016-04-06T22-21-19'
        }
    }
}
project.ext {
    projectGroup = 'java.sample'
    projectDockerGroup = 'vinodreddyvrr'
    projectDockerAppName = 'java-j2ee'
    projectVersion = 'v'
    mainClass = 'vinod.javaj2ee'
}
group projectGroup
version projectVersion

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'com.github.johnrengelman.shadow'

configurations { providedCompile }

dependencies {
    providedCompile group: 'javax', name: 'javaee-api', version:'7.0'
}

mainClassName = mainClass

shadowJar {
    classifier = 'dist'
    baseName = 'java-j2ee'
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': mainClassName
    }
    version = ''
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

def dockerTag = projectVersion + ((System.properties.getProperty('build') != null ) ? '.' + System.properties.getProperty('build') : '')

task copyDist(type: Copy, dependsOn: shadowJar) {
    from 'build/libs'
    into 'build/docker/libs'
}

task JavaApiDocker(type: Docker,  dependsOn: copyDist ) {
    dockerfile = "Dockerfile"
    project.group = projectDockerGroup
    applicationName = projectDockerAppName
    tagVersion = version + ((System.properties.getProperty('build') != null ) ? '.' + System.properties.getProperty('build') : '')
}

task createDockerImage(type:Exec, dependsOn: shadowJar) {
    commandLine 'docker',  'build',  '-t',  'vinodreddyvrr/java-j2ee', '.'
}

task tagDockerImage(type:Exec, dependsOn: createDockerImage) {
    commandLine 'docker',  'tag',  'cwds/cals-api',  "vinodreddyvrr/java-j2ee:$dockerTag"
}

task pushDockerLatest(type:Exec, dependsOn: createDockerImage) {
    commandLine 'docker',  'push',  'vinodreddyvrr/java-j2ee:latest'
}

task dropDockerImage(type:Exec) {
    commandLine 'docker',  'rmi',  "vinodreddyvrr/java-j2ee:$dockerTag"
    commandLine 'docker',  'rmi',  "vinodreddyvrr/java-j2ee:latest"

}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
